/**
 * Definition for binary tree with next pointer.
 * public class TreeLinkNode {
 *     int val;
 *     TreeLinkNode left, right, next;
 *     TreeLinkNode(int x) { val = x; }
 * }
 */
public class Solution {
    public void connect(TreeLinkNode root) {
        if(root==null){
            return;
        }
        
        if(root.left!=null){
            root.left.next=root.right;
        }
        
        if(root.right!=null && root.next!=null){
            root.right.next=root.next.left;
        }
        connect(root.left);
        connect(root.right);
        
    }
    
    
        public void connect2(TreeLinkNode root) {
        TreeLinkNode back=null;
        TreeLinkNode start=null;
        TreeLinkNode Temproot=null;
        
        if(root==null||root.left==null){
            return;
        }
        start=root.left;
        Temproot=root;
        
        while(start!=null){
            back=start;
            while(start!=null){
            start.next = Temproot.right;
            start=start.next;
            Temproot=Temproot.next;
            start.next = Temproot==null ? null : Temproot.left;
            start=start.next;
            }
        
        Temproot=back;
        start=Temproot.left;
        }
    }
    
}
