public class Solution {
    public int maxSubArray(int[] A) {
        int current=A[0];
        int result=A[0];
        for(int i=1;i<A.length;i++){
            current=Math.max(A[i],current+A[i]);
            result=Math.max(current,result);
        }
        return result;
    }
    
    
    
        public int maxSubArray2(int[] A) {
        if(A.length==0) return 0;
        return divideandconquer(A,0,A.length-1);
    }
    public int divideandconquer(int[] A,int left,int right){
        if (left==right) return A[left];
        int middle=(left+right)/2;
        int leftanswer=divideandconquer(A,left,middle);
        int rightanswer=divideandconquer(A,middle+1,right);
        int leftmax=A[middle];
        int rightmax=A[middle+1];
        int temp=0;
        
        for(int i=middle;i>=left;i--){
            temp+=A[i];
            if(leftmax<temp) leftmax=temp;
        }
        temp=0;
        for(int i=middle+1;i<=right;i++){
            temp+=A[i];
            if(rightmax<temp) rightmax=temp;
        }
        
        return Math.max(Math.max(leftanswer,rightanswer),leftmax+rightmax);
    }
    
    
    
    
}
